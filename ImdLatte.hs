module ImdLatte where

import AbsLatte

-- Haskell module generated by the BNF converter

data Register = Reg Integer | Mem Integer | RegInt Integer | RegBool Bool
  deriving (Eq, Ord, Show, Read)


data QBlock = QBlock Ident [Quadruple] Int
  deriving (Eq, Ord, Show, Read)


type QCode = [Quadruple]

data Quadruple
    = QAdd Register Register Register
    | QSub Register Register Register
    | QMul Register Register Register
    | QDiv Register Register Register
    | QMod Register Register Register
    | QAss Register Register
    | QInc Register
    | QDec Register
    | QRet Register
    | QRetV
    | QLab Ident
    | QJmp Ident
    | QJe Ident
    | QJne Ident
    | QJg Ident
    | QJge Ident
    | QJL Ident
    | QJLe Ident
    | QNeg Register Register
    | QAnd Register Register Register
    | QOr Register Register Register
    | QNot Register Register
    | QCmpLt Register Register
    | QCmpLe Register Register
    | QCmpGt Register Register
    | QCmpGe Register Register
    | QCmpEq Register Register
    | QCmpNe Register Register
    | QFunc Ident
    | QDecl Register
    | QString Register String
    deriving (Eq, Ord, Show, Read)

